{"ast":null,"code":"var _jsxFileName = \"/Users/sinclairchinchatshen/Desktop/Reesby_Intern/ReactJS_Demo/react-axios-tutorial/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Title from './Title';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n} // Hooks\n// function MyComponent() {\n//   const [error, setError] = useState(null);\n//   const [isLoaded, setIsLoaded] = useState(false);\n//   const [items, setItems] = useState([]);\n// Note: the empty deps array [] means\n// this useEffect will run once\n// similar to componentDidMount()\n// useEffect(() => {\n//   fetch(\"http://javareesbyapi-env.eba-rtdeyeqd.ap-southeast-2.elasticbeanstalk.com/api/v1/getallclients/tenant/reesby\")\n//     .then(res => res.json())\n//     .then(\n//       (result) => {\n//         setIsLoaded(true);\n//         setItems(result);\n//       },\n//       // Note: it's important to handle errors here\n//       // instead of a catch() block so that we don't swallow\n//       // exceptions from actual bugs in components.\n//       (error) => {\n//         setIsLoaded(true);\n//         setError(error);\n//       }\n//     )\n// }, [])\n// if (error) {\n//   return <div>Error: {error.message}</div>;\n// } else if (!isLoaded) {\n//   return <div>Loading...</div>;\n// } else {\n//   return (\n//     <ul>\n//       {items.map(item => (\n//         <li key={item.clientId}>\n//           {item.clientName} {item.clientWorkPhone}\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// }\n// }\n\n\n_c = App;\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nclass fetchData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://javareesbyapi-env.eba-rtdeyeqd.ap-southeast-2.elasticbeanstalk.com/api/v1/getallclients/tenant/reesby\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 14\n      }, this);\n    } else {\n      // const classes = useStyles();\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Recent Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    value: \"remember\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Client Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Industry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Point Of Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Website\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: items.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    value: \"remember\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.clientName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.clientEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.clientWorkPhone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.clientPocName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.clientWebsite\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)]\n            }, item.clientId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n} // export default function Orders() {\n//   const classes = useStyles();\n//   return (\n//     <React.Fragment>\n//       <Title>Recent Orders</Title>\n//       <Table size=\"small\">\n//         <TableHead>\n//           <TableRow>\n//             <TableCell>\n//               <FormControlLabel\n//                 control={<Checkbox value=\"remember\" />}\n//               />\n//             </TableCell>\n//             <TableCell>Client Name</TableCell>\n//             <TableCell>Email</TableCell>\n//             <TableCell>Phone</TableCell>\n//             <TableCell>Industry</TableCell>\n//             <TableCell>Point Of Contact</TableCell>\n//             <TableCell>Website</TableCell>\n//             <TableCell></TableCell>\n//           </TableRow>\n//         </TableHead>\n//         <TableBody>\n//           {items.map((item) => (\n//             <TableRow key={item.clientId}>\n//               <TableCell>\n//                 <FormControlLabel\n//                   control={<Checkbox value=\"remember\" />}\n//                 />\n//               </TableCell>\n//               <TableCell>{item.clientName}</TableCell>\n//               <TableCell>{item.clientEmail}</TableCell>\n//               <TableCell>{item.clientWorkPhone}</TableCell>\n//               <TableCell>{item.clientPocName}</TableCell>\n//               <TableCell>{item.clientWebsite}</TableCell>\n//               <TableCell></TableCell>\n//             </TableRow>\n//           ))}\n//         </TableBody>\n//       </Table>\n//     </React.Fragment>\n//   );\n// }\n\n\nexport default fetchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sinclairchinchatshen/Desktop/Reesby_Intern/ReactJS_Demo/react-axios-tutorial/src/App.js"],"names":["React","useState","useEffect","axios","makeStyles","CssBaseline","Table","TableBody","TableCell","TableHead","TableRow","FormControlLabel","Checkbox","Button","EditIcon","Title","PropTypes","App","logo","preventDefault","event","useStyles","theme","seeMore","marginTop","spacing","fetchData","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","message","map","item","clientName","clientEmail","clientWorkPhone","clientPocName","clientWebsite","clientId"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Title from './Title';\n\nimport PropTypes from 'prop-types';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\n// Hooks\n// function MyComponent() {\n//   const [error, setError] = useState(null);\n//   const [isLoaded, setIsLoaded] = useState(false);\n//   const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  // useEffect(() => {\n  //   fetch(\"http://javareesbyapi-env.eba-rtdeyeqd.ap-southeast-2.elasticbeanstalk.com/api/v1/getallclients/tenant/reesby\")\n  //     .then(res => res.json())\n  //     .then(\n  //       (result) => {\n  //         setIsLoaded(true);\n  //         setItems(result);\n  //       },\n  //       // Note: it's important to handle errors here\n  //       // instead of a catch() block so that we don't swallow\n  //       // exceptions from actual bugs in components.\n  //       (error) => {\n  //         setIsLoaded(true);\n  //         setError(error);\n  //       }\n  //     )\n  // }, [])\n\n  // if (error) {\n  //   return <div>Error: {error.message}</div>;\n  // } else if (!isLoaded) {\n  //   return <div>Loading...</div>;\n  // } else {\n  //   return (\n  //     <ul>\n  //       {items.map(item => (\n  //         <li key={item.clientId}>\n  //           {item.clientName} {item.clientWorkPhone}\n  //         </li>\n  //       ))}\n  //     </ul>\n  //   );\n  // }\n// }\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nclass fetchData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://javareesbyapi-env.eba-rtdeyeqd.ap-southeast-2.elasticbeanstalk.com/api/v1/getallclients/tenant/reesby\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      // const classes = useStyles();\n      return (\n        <React.Fragment>\n          <Title>Recent Orders</Title>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <FormControlLabel\n                    control={<Checkbox value=\"remember\" />}\n                  />\n                </TableCell>\n                <TableCell>Client Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Phone</TableCell>\n                <TableCell>Industry</TableCell>\n                <TableCell>Point Of Contact</TableCell>\n                <TableCell>Website</TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {items.map((item) => (\n                <TableRow key={item.clientId}>\n                  <TableCell>\n                    <FormControlLabel\n                      control={<Checkbox value=\"remember\" />}\n                    />\n                  </TableCell>\n                  <TableCell>{item.clientName}</TableCell>\n                  <TableCell>{item.clientEmail}</TableCell>\n                  <TableCell>{item.clientWorkPhone}</TableCell>\n                  <TableCell>{item.clientPocName}</TableCell>\n                  <TableCell>{item.clientWebsite}</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\n\n// export default function Orders() {\n//   const classes = useStyles();\n//   return (\n//     <React.Fragment>\n//       <Title>Recent Orders</Title>\n//       <Table size=\"small\">\n//         <TableHead>\n//           <TableRow>\n//             <TableCell>\n//               <FormControlLabel\n//                 control={<Checkbox value=\"remember\" />}\n//               />\n//             </TableCell>\n//             <TableCell>Client Name</TableCell>\n//             <TableCell>Email</TableCell>\n//             <TableCell>Phone</TableCell>\n//             <TableCell>Industry</TableCell>\n//             <TableCell>Point Of Contact</TableCell>\n//             <TableCell>Website</TableCell>\n//             <TableCell></TableCell>\n//           </TableRow>\n//         </TableHead>\n//         <TableBody>\n//           {items.map((item) => (\n//             <TableRow key={item.clientId}>\n//               <TableCell>\n//                 <FormControlLabel\n//                   control={<Checkbox value=\"remember\" />}\n//                 />\n//               </TableCell>\n//               <TableCell>{item.clientName}</TableCell>\n//               <TableCell>{item.clientEmail}</TableCell>\n//               <TableCell>{item.clientWorkPhone}</TableCell>\n//               <TableCell>{item.clientPocName}</TableCell>\n//               <TableCell>{item.clientWebsite}</TableCell>\n//               <TableCell></TableCell>\n//             </TableRow>\n//           ))}\n//         </TableBody>\n//       </Table>\n//     </React.Fragment>\n//   );\n// }\n\nexport default fetchData;\n"]},"metadata":{},"sourceType":"module"}