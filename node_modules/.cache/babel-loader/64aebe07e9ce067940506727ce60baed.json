{"ast":null,"code":"var _jsxFileName = \"/Users/sinclairchinchatshen/Desktop/Reesby_Intern/ReactJS_Demo/react-axios-tutorial/src/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Title from './Title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  }\n})); // Hooks API data fetching\n\nexport default function MyComponent() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 150,\n    editable: true\n  }, {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 150,\n    editable: true\n  }, {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 110,\n    editable: true\n  }, {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: params => `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`\n  }]; // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"http://javareesbyapi-env.eba-rtdeyeqd.ap-southeast-2.elasticbeanstalk.com/api/v1/getallclients/tenant/reesby\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  const classes = useStyles();\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 14\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 14\n    }, this);\n  } else {\n    const rows = [{\n      id: 1,\n      lastName: 'Snow',\n      firstName: 'Jon',\n      age: 35\n    }, {\n      id: 2,\n      lastName: 'Lannister',\n      firstName: 'Cersei',\n      age: 42\n    }, {\n      id: 3,\n      lastName: 'Lannister',\n      firstName: 'Jaime',\n      age: 45\n    }, {\n      id: 4,\n      lastName: 'Stark',\n      firstName: 'Arya',\n      age: 16\n    }, {\n      id: 5,\n      lastName: 'Targaryen',\n      firstName: 'Daenerys',\n      age: null\n    }, {\n      id: 6,\n      lastName: 'Melisandre',\n      firstName: null,\n      age: 150\n    }, {\n      id: 7,\n      lastName: 'Clifford',\n      firstName: 'Ferrara',\n      age: 44\n    }, {\n      id: 8,\n      lastName: 'Frances',\n      firstName: 'Rossini',\n      age: 36\n    }, {\n      id: 9,\n      lastName: 'Roxie',\n      firstName: 'Harvey',\n      age: 65\n    }];\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: \"All Clients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 5,\n          checkboxSelection: true,\n          disableSelectionOnClick: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(MyComponent, \"uWEEale/Ls2WBK5wAegBKSDCPhs=\", false, function () {\n  return [useStyles];\n});\n\n_c = MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"sources":["/Users/sinclairchinchatshen/Desktop/Reesby_Intern/ReactJS_Demo/react-axios-tutorial/src/Table.js"],"names":["React","useState","useEffect","makeStyles","CssBaseline","DataGrid","Table","TableBody","TableCell","TableHead","TableRow","FormControlLabel","Checkbox","Button","EditIcon","Title","preventDefault","event","useStyles","theme","seeMore","marginTop","spacing","MyComponent","error","setError","isLoaded","setIsLoaded","items","setItems","columns","field","headerName","width","editable","type","description","sortable","valueGetter","params","getValue","id","fetch","then","res","json","result","classes","message","rows","lastName","firstName","age","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Title from './Title';\n\nfunction preventDefault(event) {\n    event.preventDefault();\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    seeMore: {\n      marginTop: theme.spacing(3),\n    },\n  }));\n  \n  // Hooks API data fetching\n  export default function MyComponent() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n          field: 'firstName',\n          headerName: 'First name',\n          width: 150,\n          editable: true,\n        },\n        {\n          field: 'lastName',\n          headerName: 'Last name',\n          width: 150,\n          editable: true,\n        },\n        {\n          field: 'age',\n          headerName: 'Age',\n          type: 'number',\n          width: 110,\n          editable: true,\n        },\n        {\n          field: 'fullName',\n          headerName: 'Full name',\n          description: 'This column has a value getter and is not sortable.',\n          sortable: false,\n          width: 160,\n          valueGetter: (params) =>\n            `${params.getValue(params.id, 'firstName') || ''} ${\n              params.getValue(params.id, 'lastName') || ''\n            }`,\n        },\n      ];\n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n      fetch(\"http://javareesbyapi-env.eba-rtdeyeqd.ap-southeast-2.elasticbeanstalk.com/api/v1/getallclients/tenant/reesby\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setItems(result);\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n    }, [])\n  \n    const classes = useStyles();\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      const rows = [\n        { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n        { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n        { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n        { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n        { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n        { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n        { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n        { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n        { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n      ];\n\n\n      return (\n        <React.Fragment>\n          <CssBaseline />\n            <Title>All Clients</Title>\n            {/* <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <FormControlLabel\n                      control={<Checkbox value=\"remember\" color=\"primary\" />}\n                    />\n                  </TableCell>\n                  <TableCell>Client Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Industry</TableCell>\n                  <TableCell>Point Of Contact</TableCell>\n                  <TableCell>Website</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {items.map((item) => (\n                  <TableRow key={item.clientId}>\n                    <TableCell>\n                      <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      />\n                    </TableCell>\n                    <TableCell>{item.clientName}</TableCell>\n                    <TableCell>{item.clientEmail}</TableCell>\n                    <TableCell>{item.clientWorkPhone}</TableCell>\n                    <TableCell>{item.clientIndustry}</TableCell>\n                    <TableCell>{item.clientPocName}</TableCell>\n                    <TableCell>{item.clientWebsite}</TableCell>\n                    <TableCell><Button variant=\"outlined\" color=\"primary\"><EditIcon></EditIcon></Button></TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table> */}\n\n            <div style={{ height: 400, width: '100%' }}>\n                <DataGrid\n                    rows={rows}\n                    columns={columns}\n                    pageSize={5}\n                    checkboxSelection\n                    disableSelectionOnClick\n                />\n            </div>\n        </React.Fragment>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}