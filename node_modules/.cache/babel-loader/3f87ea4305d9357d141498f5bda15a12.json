{"ast":null,"code":"var _jsxFileName = \"/Users/sinclairchinchatshen/Desktop/Reesby_Intern/ReactJS_Demo/react-axios-tutorial/src/Table.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction createData(clientId, clientName, clientEmail, clientWorkPhone, clientIndustry, clientPocName, clientWebsite) {\n  return {\n    clientId,\n    clientName,\n    clientEmail,\n    clientWorkPhone,\n    clientIndustry,\n    clientPocName,\n    clientWebsite\n  };\n}\n\nconst headCells = [{\n  id: 'clientName',\n  numeric: false,\n  disablePadding: true,\n  label: 'Client Name'\n}, {\n  id: 'clientEmail',\n  numeric: true,\n  disablePadding: false,\n  label: 'Email'\n}, {\n  id: 'clientWorkPhone',\n  numeric: true,\n  disablePadding: false,\n  label: 'Phone'\n}, {\n  id: 'clientIndustry',\n  numeric: true,\n  disablePadding: false,\n  label: 'Industry'\n}, {\n  id: 'clientPocName',\n  numeric: true,\n  disablePadding: false,\n  label: 'Point Of Contact'\n}, {\n  id: 'clientWebsite',\n  numeric: true,\n  disablePadding: false,\n  label: 'Website'\n}, {\n  id: 'editInfo',\n  numeric: true,\n  disablePadding: false,\n  label: ''\n}]; // table head with sort handlers for each titles\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? 'right' : 'left',\n        padding: headCell.disablePadding ? 'none' : 'normal',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"All Clients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), numSelected > 0 ? ( /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"delete\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Filter list\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"filter list\",\n        children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Filter list\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"filter list\",\n        children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"3YobLOlq21lAjJ1iCLt9G1iGJSo=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  //   table: {\n  //     minWidth: 750,\n  //   },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n})); // default table display function\n\nexport default function TableDisplay() {\n  _s2();\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('clientName');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  var rows = []; // Hook API data fetch with given link\n\n  useEffect(() => {\n    fetch(\"http://javareesbyapi-env.eba-rtdeyeqd.ap-southeast-2.elasticbeanstalk.com/api/v1/getallclients/tenant/reesby\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []); // sort in ascending or descending order\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  }; // checkbox select all\n\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = items.map(item => item.clientId);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  }; // checkbox select one, increment when selected more\n\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = clientId => selected.indexOf(clientId) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage); // checkers before pushing data to pre-defined rows variables for display\n  // error and loading\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 12\n    }, this);\n  } else {\n    // map to push to rows, and display accordingly\n    {\n      items.map(item => // push function to call createData function defined to populate array\n      rows.push(createData(item.clientId, item.clientName, item.clientEmail, item.clientWorkPhone, item.clientIndustry, item.clientPocName, item.clientWebsite)));\n    }\n    ;\n  } // return full tables and data\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n          numSelected: selected.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            \"aria-labelledby\": \"tableTitle\",\n            \"aria-label\": \"enhanced table\",\n            children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n              classes: classes,\n              numSelected: selected.length,\n              order: order,\n              orderBy: orderBy,\n              onSelectAllClick: handleSelectAllClick,\n              onRequestSort: handleRequestSort,\n              rowCount: rows.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                const isItemSelected = isSelected(row.clientId);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  onClick: event => handleClick(event, row.clientId),\n                  role: \"checkbox\",\n                  \"aria-checked\": isItemSelected,\n                  tabIndex: -1,\n                  selected: isItemSelected,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: isItemSelected,\n                      inputProps: {\n                        'aria-labelledby': labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    id: labelId,\n                    scope: \"row\",\n                    padding: \"none\",\n                    children: row.clientName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.clientEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.clientWorkPhone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.clientIndustry\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.clientPocName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.clientWebsite\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 364,\n                        columnNumber: 93\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 50\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 25\n                  }, this)]\n                }, row.clientId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TableDisplay, \"AvaivjRxOfNr0VvJymJb9r3UXRo=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = TableDisplay;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"TableDisplay\");","map":{"version":3,"sources":["/Users/sinclairchinchatshen/Desktop/Reesby_Intern/ReactJS_Demo/react-axios-tutorial/src/Table.js"],"names":["React","useState","useEffect","PropTypes","clsx","lighten","makeStyles","CssBaseline","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Checkbox","Button","Toolbar","Typography","Paper","IconButton","Tooltip","DeleteIcon","FilterListIcon","EditIcon","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","createData","clientId","clientName","clientEmail","clientWorkPhone","clientIndustry","clientPocName","clientWebsite","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","useStyles","width","paper","marginBottom","border","clip","height","margin","overflow","padding","position","top","TableDisplay","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","error","setError","isLoaded","setIsLoaded","items","setItems","rows","fetch","then","res","json","result","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","item","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","message","push","table","row","isItemSelected","labelId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EditIcon from '@material-ui/icons/Edit';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction createData(clientId, clientName, clientEmail, clientWorkPhone, clientIndustry, clientPocName, clientWebsite) {\n    return { clientId, clientName, clientEmail, clientWorkPhone, clientIndustry, clientPocName, clientWebsite };\n}\n\nconst headCells = [\n  { id: 'clientName', numeric: false, disablePadding: true, label: 'Client Name' },\n  { id: 'clientEmail', numeric: true, disablePadding: false, label: 'Email' },\n  { id: 'clientWorkPhone', numeric: true, disablePadding: false, label: 'Phone' },\n  { id: 'clientIndustry', numeric: true, disablePadding: false, label: 'Industry' },\n  { id: 'clientPocName', numeric: true, disablePadding: false, label: 'Point Of Contact' },\n  { id: 'clientWebsite', numeric: true, disablePadding: false, label: 'Website' },\n  { id: 'editInfo', numeric: true, disablePadding: false, label: '' },\n];\n\n// table head with sort handlers for each titles\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          All Clients\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>,\n        <Tooltip title=\"Filter list\">\n        <IconButton aria-label=\"filter list\">\n          <FilterListIcon />\n        </IconButton>\n      </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n//   table: {\n//     minWidth: 750,\n//   },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n// default table display function\nexport default function TableDisplay() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('clientName');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    var rows = [];\n\n    // Hook API data fetch with given link\n    useEffect(() => {\n        fetch(\"http://javareesbyapi-env.eba-rtdeyeqd.ap-southeast-2.elasticbeanstalk.com/api/v1/getallclients/tenant/reesby\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              setIsLoaded(true);\n              setItems(result);              \n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              setIsLoaded(true);\n              setError(error);\n            }\n          )\n      }, [])\n    \n  // sort in ascending or descending order\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // checkbox select all\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = items.map((item) => item.clientId);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  // checkbox select one, increment when selected more\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);    \n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (clientId) => selected.indexOf(clientId) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  // checkers before pushing data to pre-defined rows variables for display\n  // error and loading\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    // map to push to rows, and display accordingly\n    {items.map((item) => (        \n        // push function to call createData function defined to populate array\n        rows.push(createData(item.clientId, item.clientName, item.clientEmail, item.clientWorkPhone, item.clientIndustry, item.clientPocName, item.clientWebsite),)\n    ))};\n  }\n\n  // return full tables and data\n  return (\n    <React.Fragment>\n        <CssBaseline />\n        <div className={classes.root}>\n        <Paper className={classes.paper}>\n            <EnhancedTableToolbar numSelected={selected.length} />\n            <TableContainer>\n            <Table\n                className={classes.table}\n                aria-labelledby=\"tableTitle\"\n                aria-label=\"enhanced table\"\n            >\n                <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rows.length}\n                />\n                <TableBody>                \n                {stableSort(rows, getComparator(order, orderBy))\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                    const isItemSelected = isSelected(row.clientId);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row.clientId)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.clientId}\n                        selected={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                            <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{ 'aria-labelledby': labelId }}\n                            />\n                        </TableCell>\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                            {row.clientName}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.clientEmail}</TableCell>\n                        <TableCell align=\"right\">{row.clientWorkPhone}</TableCell>\n                        <TableCell align=\"right\">{row.clientIndustry}</TableCell>\n                        <TableCell align=\"right\">{row.clientPocName}</TableCell>\n                        <TableCell align=\"right\">{row.clientWebsite}</TableCell>\n                        <TableCell align=\"right\"><Button variant=\"outlined\" color=\"primary\"><EditIcon /></Button></TableCell>\n                      </TableRow>\n                    );\n                    })}\n                </TableBody>\n            </Table>\n            </TableContainer>\n            <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n        </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}