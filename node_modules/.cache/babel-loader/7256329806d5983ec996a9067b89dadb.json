{"ast":null,"code":"var _jsxFileName = \"/Users/sinclairchinchatshen/Desktop/Reesby_Intern/ReactJS_Demo/react-axios-tutorial/src/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { DataGrid } from '@material-ui/data-grid';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Title from './Title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  }\n})); // Hooks API data fetching\n\nexport default function MyComponent() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const columns = [// not displaying IDs\n  // { field: 'id', headerName: 'ID', width: 90 },\n  {\n    field: 'clientName',\n    headerName: 'Client Name',\n    width: 200\n  }, {\n    field: 'clientEmail',\n    headerName: 'Email',\n    width: 250\n  }, {\n    field: 'clientWorkPhone',\n    headerName: 'Phone',\n    type: 'number',\n    width: 130\n  }, {\n    field: 'clientIndustry',\n    headerName: 'Industry',\n    width: 200\n  }, {\n    field: 'clientPocName',\n    headerName: 'Point of Contact',\n    width: 180\n  }, {\n    field: 'clientWebsite',\n    headerName: 'Website',\n    width: 200\n  }]; // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n  useEffect(() => {\n    fetch(\"http://javareesbyapi-env.eba-rtdeyeqd.ap-southeast-2.elasticbeanstalk.com/api/v1/getallclients/tenant/reesby\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  const classes = useStyles();\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 14\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 14\n    }, this);\n  } else {\n    const rows = []; // map to push to rows, and display accordingly\n    //   {items.map((item) => (                \n    //     rows.push(            \n    //         { id: item.clientId, clientName: item.clientName, clientEmail: item.clientEmail, clientWorkPhone: item.clientWorkPhone, clientIndustry: item.clientIndustry, clientPocName: item.clientPocName, clientWebsite: item.clientWebsite },     \n    //     )\n    //   ))};\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        children: \"All Clients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Client Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Industry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Point Of Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Website\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  value: \"remember\",\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.clientName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.clientEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.clientWorkPhone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.clientIndustry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.clientPocName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.clientWebsite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 75\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this)]\n          }, item.clientId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(MyComponent, \"uWEEale/Ls2WBK5wAegBKSDCPhs=\", false, function () {\n  return [useStyles];\n});\n\n_c = MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"sources":["/Users/sinclairchinchatshen/Desktop/Reesby_Intern/ReactJS_Demo/react-axios-tutorial/src/Table.js"],"names":["React","useState","useEffect","makeStyles","CssBaseline","DataGrid","FilterListIcon","Table","TableBody","TableCell","TableHead","TableRow","FormControlLabel","Checkbox","Button","EditIcon","Title","preventDefault","event","useStyles","theme","seeMore","marginTop","spacing","MyComponent","error","setError","isLoaded","setIsLoaded","items","setItems","columns","field","headerName","width","type","fetch","then","res","json","result","classes","message","rows","map","item","clientName","clientEmail","clientWorkPhone","clientIndustry","clientPocName","clientWebsite","clientId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { DataGrid } from '@material-ui/data-grid';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Title from './Title';\n\nfunction preventDefault(event) {\n    event.preventDefault();\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    seeMore: {\n      marginTop: theme.spacing(3),\n    },\n  }));\n  \n  // Hooks API data fetching\n  export default function MyComponent() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    const columns = [\n        // not displaying IDs\n        // { field: 'id', headerName: 'ID', width: 90 },\n        {\n          field: 'clientName',\n          headerName: 'Client Name',\n          width: 200,\n        },\n        {\n          field: 'clientEmail',\n          headerName: 'Email',\n          width: 250,\n        },\n        {\n          field: 'clientWorkPhone',\n          headerName: 'Phone',\n          type: 'number',\n          width: 130,\n        },\n        {\n          field: 'clientIndustry',\n          headerName: 'Industry',\n          width: 200,\n        },\n        {\n          field: 'clientPocName',\n          headerName: 'Point of Contact',\n          width: 180,\n        },\n        {\n          field: 'clientWebsite',\n          headerName: 'Website',\n          width: 200,\n        },\n      ];\n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n      fetch(\"http://javareesbyapi-env.eba-rtdeyeqd.ap-southeast-2.elasticbeanstalk.com/api/v1/getallclients/tenant/reesby\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setItems(result);\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n    }, [])\n  \n    const classes = useStyles();\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      const rows = [];\n\n      // map to push to rows, and display accordingly\n    //   {items.map((item) => (                \n    //     rows.push(            \n    //         { id: item.clientId, clientName: item.clientName, clientEmail: item.clientEmail, clientWorkPhone: item.clientWorkPhone, clientIndustry: item.clientIndustry, clientPocName: item.clientPocName, clientWebsite: item.clientWebsite },     \n    //     )\n    //   ))};\n\n      return (\n        <React.Fragment>\n          <CssBaseline />\n            <Title>All Clients</Title>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    \n                  </TableCell>\n                  <TableCell>Client Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Industry</TableCell>\n                  <TableCell>Point Of Contact</TableCell>\n                  <TableCell>Website</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {items.map((item) => (\n                  <TableRow key={item.clientId}>\n                    <TableCell>\n                      <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                      />\n                    </TableCell>\n                    <TableCell>{item.clientName}</TableCell>\n                    <TableCell>{item.clientEmail}</TableCell>\n                    <TableCell>{item.clientWorkPhone}</TableCell>\n                    <TableCell>{item.clientIndustry}</TableCell>\n                    <TableCell>{item.clientPocName}</TableCell>\n                    <TableCell>{item.clientWebsite}</TableCell>\n                    <TableCell><Button variant=\"outlined\" color=\"primary\"><EditIcon></EditIcon></Button></TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n\n            {/* <div style={{ height: 630, width: '100%' }}>\n                <DataGrid\n                    rows={rows}\n                    columns={columns}\n                    pageSize={10}\n                    checkboxSelection\n                    disableSelectionOnClick\n                />\n            </div> */}\n        </React.Fragment>\n      );\n    }\n  }"]},"metadata":{},"sourceType":"module"}